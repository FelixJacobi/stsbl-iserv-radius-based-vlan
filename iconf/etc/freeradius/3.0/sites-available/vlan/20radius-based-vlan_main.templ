server vlan {
	listen {
		type = auth
		ipv4addr = 127.0.0.1
		port = 18122
#		interface = eth0
#		clients = per_socket_clients
                limit {
			max_connections = 16
			lifetime = 0
			idle_timeout = 30
		}
	}

$(
for i in $(netquery -p ip)
do
  echo "	listen {"
  echo "		type = auth"
  echo "		ipv4addr = $i"
  echo "		port = 18122"
  echo "#		interface = eth0"
  echo "#		clients = per_socket_clients"
  echo "                limit {"
  echo "			max_connections = 16"
  echo "			lifetime = 0"
  echo "			idle_timeout = 30"
  echo "		}"
  echo "	}"
  echo
done
if [ -x "/usr/sbin/netquery6" ]
then
  for i in $(netquery6 -gul ip)
  do
    echo "	listen {"
    echo "		type = auth"
    echo "		ipv6addr = $i"
    echo "		port = 18122"
    echo "#		interface = eth0"
    echo "#		clients = per_socket_clients"
    echo "                limit {"
    echo "			max_connections = 16"
    echo "			lifetime = 0"
    echo "			idle_timeout = 30"
    echo "		}"
    echo "	}"
    echo
  done
fi)

	authorize {
		perl_vlan
		ldap_vlan_host
		pap

		preprocess
		suffix
	#	ntdomain
	        if (EAP-Message) {
	                update control {
	                        Virtual-Server := "vlan_inner-tunnel"
	                }
	        }
		eap {
			ok = return
		}
		expiration
		logintime
	}

	authenticate {
		eap
		pap
	}
	
	post-auth {
	        Post-Auth-Type REJECT {	
			attr_filter.access_reject
	        }
		update {
			&reply:Tunnel-Type := &session-state:Tunnel-Type
			&reply:Tunnel-Medium-Type := &session-state:Tunnel-Medium-Type
			&reply:Tunnel-Private-Group-Id := &session-state:Tunnel-Private-Group-Id$(
[ -n "$RadiusBasedVlanFallbackId" ] && echo -e "
\t\t\t&reply:Tunnel-Type = VLAN
\t\t\t&reply:Tunnel-Medium-Type = IEEE-802
\t\t\t&reply:Tunnel-Private-Group-ID = '$RadiusBasedVlanFallbackId'
")
		}
	}

}

